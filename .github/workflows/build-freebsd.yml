name: Build FreeBSD Dashboard

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup and Build in FreeBSD VM
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          sync: rsync
          copyback: true
          prepare: |
            pkg install -y go git wget unzip
            go install github.com/swaggo/swag/cmd/swag@latest
          run: |
            export PATH=./:$PATH:/root/go/bin
            
            # Create workspace directory
            mkdir -p /workspace
            
            # Clone Nezha repository
            git clone https://github.com/nezhahq/nezha.git
            cd nezha
            echo "now path is $(pwd)"
            
            # Initialize go module and get dependencies
            go mod init github.com/nezhahq/nezha >/dev/null
            go mod tidy >/dev/null
            
            # Download and setup admin frontend first
            echo "Setting up admin frontend..."
            ADMIN_RELEASE_URL=$(curl -s https://api.github.com/repos/nezhahq/admin-frontend/releases/latest | grep "browser_download_url.*dist.zip" | cut -d '"' -f 4)
            wget -O admin-dist.zip "$ADMIN_RELEASE_URL"
            mkdir -p ./cmd/dashboard/admin-dist
            unzip admin-dist.zip -d temp
            mv temp/dist/* ./cmd/dashboard/admin-dist/
            rm -rf temp admin-dist.zip
            
            # Download and setup user frontend
            echo "Setting up user frontend..."
            USER_RELEASE_URL=$(curl -s https://api.github.com/repos/hamster1963/nezha-dash-v1/releases/latest | grep "browser_download_url.*dist.zip" | cut -d '"' -f 4)
            wget -O user-dist.zip "$USER_RELEASE_URL"
            mkdir -p ./cmd/dashboard/user-dist
            unzip user-dist.zip -d temp
            mv temp/dist/* ./cmd/dashboard/user-dist/
            rm -rf temp user-dist.zip
            
            # Now generate API docs
            echo "Generating API docs..."
            cd cmd/dashboard
            echo "Generating docs from $(pwd)"
            ls
            if ! swag init --pd -d ./ -g main.go -o docs --parseGoList=false; then
              echo "Failed to generate API docs"
              exit 1
            fi
            echo "API docs generated successfully"
            
            # Verify docs directory exists and contains files
            if [ ! -d "./docs" ] || [ ! -f "./docs/docs.go" ]; then
              echo "Docs directory was not created"
              exit 1
            fi
            cd ../..  # 回到项目根目录
            
            # Build dashboard
            cd cmd/dashboard
            echo "Build now path is $(pwd)"
            go mod tidy >/dev/null
            go build
            
            # Compress dashboard binary and commit
            gzip -c dashboard > dashboard.gz
            
            # Move the file to the repository
            echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
            cp dashboard.gz ${GITHUB_WORKSPACE}/
            cd ${GITHUB_WORKSPACE}
            
            # Git operations
            git config --global --add safe.directory ${GITHUB_WORKSPACE}
            git config --global user.email "github-actions@github.com"
            git config --global user.name "GitHub Actions"
            git add -f dashboard.gz  # 使用 -f 强制添加被忽略的文件
            git commit -m "Update FreeBSD dashboard binary" || true
            git push origin main

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-freebsd
          path: dashboard.gz

permissions:
  contents: write  # 添加写入权限 